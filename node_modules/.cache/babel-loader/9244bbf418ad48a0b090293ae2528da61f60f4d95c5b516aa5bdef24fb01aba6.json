{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '@/config.js';\nexport default {\n  name: 'FruitListing',\n  data() {\n    return {\n      loading: true,\n      fruits: [],\n      filters: {\n        name: '',\n        family: ''\n      },\n      page: 1,\n      perPage: 10,\n      totalPages: 1,\n      favorites: [],\n      url: API_URL // Define URL globally\n    };\n  },\n\n  methods: {\n    loadPage(page) {\n      this.page = page;\n      this.loading = true;\n      axios.get(`${this.url}/fruits`, {\n        params: {\n          page,\n          per_page: this.perPage,\n          name: this.filters.name,\n          family: this.filters.family\n        }\n      }).then(response => {\n        this.fruits = response.data.fruits;\n        this.totalPages = Math.ceil(response.data.totalCount / this.perPage);\n        this.loading = false;\n        console.log('Total Pages', this.totalPages);\n      }).catch(error => {\n        console.log(error);\n        this.loading = false;\n      });\n    },\n    addToCart(id) {\n      // axios.post(`${this.url}/add-favorite-fruit`, null, {\n      //   params: {\n      //     fruit_id: id\n      //   }\n      // }).then(response => {\n      //   if (response.data.success) {\n      //       console.log('Item added successfully');\n      //       // Change button text here\n      //     } else {\n      //       console.log('Error adding item');\n      //     }\n      //   this.fruits.find(fruit => fruit.id === id).added = true\n      // }).catch(error => {\n      //   console.log(error)\n      // })\n\n      // Check if favorite count is greater than 10\n      if (this.favorites.length >= 10) {\n        console.log('Favorite limit reached');\n        // Display error message here\n        return;\n      }\n      axios.get(`${this.url}/favorite-fruits`).then(response => {\n        // Get favorite fruit IDs from response data\n        console.log(response.data.fruits);\n        const favoriteIds = response.data.fruits.map(fruit => fruit.id);\n        if (favoriteIds.includes(id)) {\n          console.log('Already added to favorites');\n          // Change button text here\n        } else {\n          axios.post(`${this.url}/add-favorite-fruit`, null, {\n            params: {\n              fruit_id: id\n            }\n          }).then(response => {\n            if (response.data.success) {\n              console.log('Item added successfully');\n              // Change button text here\n            } else {\n              console.log('Error adding item');\n            }\n            this.fruits.find(fruit => fruit.id === id).added = true;\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    isFavorite(id) {\n      return this.favorites.includes(id);\n    }\n  },\n  mounted() {\n    axios.get(`${this.url}/favorites`).then(response => {\n      this.favorites = response.data.map(item => item.fruitId);\n    }).catch(error => {\n      console.log(error);\n    });\n    this.loadPage(this.page);\n  }\n};","map":{"version":3,"names":["axios","API_URL","name","data","loading","fruits","filters","family","page","perPage","totalPages","favorites","url","methods","loadPage","get","params","per_page","then","response","Math","ceil","totalCount","console","log","catch","error","addToCart","id","length","favoriteIds","map","fruit","includes","post","fruit_id","success","find","added","isFavorite","mounted","item","fruitId"],"sources":["/home/code4each/Projects/fruits/fruitsapp/src/components/FruitListing.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    <h1>Fruits</h1>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else>\n      <div>\n        <label for=\"name\">Filter by name:</label>\n        <input type=\"text\" id=\"name\" v-model=\"filters.name\">\n      </div>\n      <div>\n        <label for=\"family\">Filter by family:</label>\n        <input type=\"text\" id=\"family\" v-model=\"filters.family\">\n      </div>\n      <div v-if=\"fruits.length === 0\">\n        No fruits found\n      </div>\n      <div v-else>\n        <div v-for=\"fruit in fruits\" :key=\"fruit.id\">\n          <h3>{{ fruit.name }}</h3>\n          <div>Family: {{ fruit.family }}</div>\n          <div>Order: {{ fruit.order }}</div>\n          <div>Genus: {{ fruit.genus }}</div>\n          <div>\n            Nutritions:\n            <ul>\n              <li>Calories: {{ fruit.calories }}</li>\n              <li>Fat: {{ fruit.fat }}</li>\n              <li>Sugar: {{ fruit.sugar }}</li>\n              <li>Carbohydrates: {{ fruit.carbohydrates }}</li>\n              <li>Protein: {{ fruit.protein }}</li>\n            </ul>\n          </div>\n          <button @click=\"toggleFavorite(fruit.fruit_id)\">\n            {{ isFavorite(fruit.id) ? 'Remove from favorites' : 'Add to favorites' }}\n          </button>\n        </div>\n        <div>\n          <button v-if=\"page > 1\" @click=\"loadPage(page - 1)\">Previous page</button>\n          <button v-if=\"page < totalPages\" @click=\"loadPage(page + 1)\">Next page</button>\n        </div>\n      </div>\n    </div>\n  </div> -->\n\n\n    <div id=\"wrap m-4\">\n      <div class=\"container\">\n          <h3 class=\"mb-4\">A demo of Listing all the Fruits</h3>\n          <div v-if=\"loading\">Loading...</div>\n          <div v-else>\n            <form method=\"post\" action=\"\" name=\"search_filter\">\n                <div class=\"form-group mb-4\">\n                    <select name=\"by_name_filter\" class=\"form-control select_filter\" id=\"by_name\">\n                        <option value=\"all\" selected=\"selected\">By Name</option>\n                          <div v-for=\"fruit in fruits\" :key=\"fruit.id\">\n                            <option value=\"{{ fruit.name }}\">{{ fruit.name }}</option>\n                          </div>\n                      </select>\n                </div>\n                <div class=\"form-group mb-4\">\n                    <select name=\"by_family_filter\" class=\"form-control select_filter\" id=\"by_family\">\n                        <option value=\"all\">By Family</option>\n                        <div v-for=\"fruit in fruits\" :key=\"fruit.id\">\n                            <option value=\"{{ fruit.family }}\">{{ fruit.family }}</option>\n                        </div>\n                    </select>\n                </div>\n            </form>\n              <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"fruits_list_table table table-striped table-bordered\" id=\"fruits_list_table\">\n                <thead>\n                  <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Family</th>\n                    <th>Order</th>\n                    <th>Calories</th>\n                    <th>Fat</th>\n                    <th>Sugar</th>\n                    <th>Carbohydrates</th>\n                    <th>Protein</th>\n                    <th>Favourite</th>\n                  </tr>\n                </thead>\n                <tbody>\n                    <tr v-if=\"fruits.length === 0\" class=\"gradeX\">\n                      <td>No Record Found</td>\n                    </tr>\n                    <tr v-else v-for=\"fruit in fruits\" :key=\"fruit.id\" class=\"gradeX\">\n                        <td>{{ fruit.id }}</td>\n                        <td>{{ fruit.name }}</td>\n                        <td>{{ fruit.family }}</td>\n                        <td>{{ fruit.order }}</td>\n                        <td>{{ fruit.calories }}</td>\n                        <td>{{ fruit.fat }}</td>\n                        <td>{{ fruit.sugar }}</td>\n                        <td>{{ fruit.carbohydrates }}</td>\n                        <td>{{ fruit.protein }}</td>\n                        <td>\n                          <button v-if=\"!fruit.added\" @click=\"addToCart(fruit.id)\" class=\"btn btn-primary\">Add </button>\n                          <span v-else>Added to cart</span>\n                        </td>\n                    </tr>\n                </tbody>\n              </table>\n              <div>\n                <button @click=\"loadPage(page - 1)\" :disabled=\"page === 1\">Previous page</button>\n                <button @click=\"loadPage(page + 1)\" :disabled=\"page === totalPages\">Next page</button>\n              </div>\n            </div>\n        </div>\n      </div>\n    \n</template>\n\n<script>\nimport axios from 'axios'\nimport { API_URL } from '@/config.js';\n\nexport default {\n  name: 'FruitListing',\n  data() {\n    return {\n      loading: true,\n      fruits: [],\n      filters: {\n        name: '',\n        family: '',\n      },\n      page: 1,\n      perPage: 10,\n      totalPages: 1,\n      favorites: [],\n      url: API_URL, // Define URL globally\n    }\n  },\n  methods: {\n    loadPage(page) {\n      this.page = page;\n      this.loading = true\n      axios.get(`${this.url}/fruits`, {\n        params: {\n          page,\n          per_page: this.perPage,\n          name: this.filters.name,\n          family: this.filters.family,\n        },\n      }).then(response => {\n        this.fruits = response.data.fruits\n        this.totalPages = Math.ceil(response.data.totalCount / this.perPage)\n        this.loading = false\n        console.log('Total Pages', this.totalPages)\n      }).catch(error => {\n        console.log(error)\n        this.loading = false\n      })\n    },\n    addToCart(id) {\n      // axios.post(`${this.url}/add-favorite-fruit`, null, {\n      //   params: {\n      //     fruit_id: id\n      //   }\n      // }).then(response => {\n      //   if (response.data.success) {\n      //       console.log('Item added successfully');\n      //       // Change button text here\n      //     } else {\n      //       console.log('Error adding item');\n      //     }\n      //   this.fruits.find(fruit => fruit.id === id).added = true\n      // }).catch(error => {\n      //   console.log(error)\n      // })\n\n       // Check if favorite count is greater than 10\n  if (this.favorites.length >= 10) {\n    console.log('Favorite limit reached');\n    // Display error message here\n    return;\n  }\n\n  axios.get(`${this.url}/favorite-fruits`).then(response => {\n    // Get favorite fruit IDs from response data\n    console.log(response.data.fruits);\n    const favoriteIds = response.data.fruits.map(fruit => fruit.id);\n\n    if (favoriteIds.includes(id)) {\n      console.log('Already added to favorites');\n      // Change button text here\n    } else {\n      axios.post(`${this.url}/add-favorite-fruit`, null, {\n        params: {\n          fruit_id: id\n        }\n      }).then(response => {\n        if (response.data.success) {\n          console.log('Item added successfully');\n          // Change button text here\n        } else {\n          console.log('Error adding item');\n        }\n        this.fruits.find(fruit => fruit.id === id).added = true\n      }).catch(error => {\n        console.log(error)\n      })\n    }\n  }).catch(error => {\n    console.log(error)\n  })\n      \n    },\n    isFavorite(id) {\n      return this.favorites.includes(id)\n    },\n  },\n  mounted() {\n    axios.get(`${this.url}/favorites`).then(response => {\n      this.favorites = response.data.map(item => item.fruitId)\n    }).catch(error => {\n      console.log(error)\n    })\n    this.loadPage(this.page)\n  },\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}