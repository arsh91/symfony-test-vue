{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div>\\n    <h1>Fruits</h1>\\n    <div v-if=\\\"loading\\\">Loading...</div>\\n    <div v-else>\\n      <div>\\n        <label for=\\\"name\\\">Filter by name:</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" v-model=\\\"filters.name\\\">\\n      </div>\\n      <div>\\n        <label for=\\\"family\\\">Filter by family:</label>\\n        <input type=\\\"text\\\" id=\\\"family\\\" v-model=\\\"filters.family\\\">\\n      </div>\\n      <div v-if=\\\"fruits.length === 0\\\">\\n        No fruits found\\n      </div>\\n      <div v-else>\\n        <div v-for=\\\"fruit in fruits\\\" :key=\\\"fruit.id\\\">\\n          <h3>{{ fruit.name }}</h3>\\n          <div>Family: {{ fruit.family }}</div>\\n          <div>Order: {{ fruit.order }}</div>\\n          <div>Genus: {{ fruit.genus }}</div>\\n          <div>\\n            Nutritions:\\n            <ul>\\n              <li>Calories: {{ fruit.calories }}</li>\\n              <li>Fat: {{ fruit.fat }}</li>\\n              <li>Sugar: {{ fruit.sugar }}</li>\\n              <li>Carbohydrates: {{ fruit.carbohydrates }}</li>\\n              <li>Protein: {{ fruit.protein }}</li>\\n            </ul>\\n          </div>\\n          <button @click=\\\"toggleFavorite(fruit.fruit_id)\\\">\\n            {{ isFavorite(fruit.id) ? 'Remove from favorites' : 'Add to favorites' }}\\n          </button>\\n        </div>\\n        <div>\\n          <button v-if=\\\"page > 1\\\" @click=\\\"loadPage(page - 1)\\\">Previous page</button>\\n          <button v-if=\\\"page < totalPages\\\" @click=\\\"loadPage(page + 1)\\\">Next page</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div> \"), _createCommentVNode(\" <div id=\\\"wrap\\\">\\n      <div class=\\\"container\\\">\\n          <h3 class=\\\"mb-4\\\">A demo of Listing all the Fruits</h3>\\n          <div v-if=\\\"loading\\\">Loading...</div>\\n          <div v-else>\\n            <form method=\\\"post\\\" action=\\\"\\\" name=\\\"search_filter\\\">\\n                <div class=\\\"form-group\\\">\\n                    <select name=\\\"by_name_filter\\\" class=\\\"form-control select_filter\\\" id=\\\"by_name\\\">\\n                        <option value=\\\"all\\\" selected=\\\"selected\\\">By Name</option>\\n                        {% for fruit in fruits %}\\n                            <option value=\\\"{{ fruit.name }}\\\">{{ fruit.name }}</option>\\n                        {% endfor %}\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <select name=\\\"by_family_filter\\\" class=\\\"form-control select_filter\\\" id=\\\"by_family\\\">\\n                        <option value=\\\"all\\\">By Family</option>\\n                        {% for fruit in fruits %}\\n                            <option value=\\\"{{ fruit.family }}\\\">{{ fruit.family }}</option>\\n                        {% endfor %}\\n                    </select>\\n                </div>\\n            </form>\\n              <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"fruits_list_table table table-striped table-bordered\\\" id=\\\"fruits_list_table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Id</th>\\n                    <th>Name</th>\\n                    <th>Family</th>\\n                    <th>Order</th>\\n                    <th>Calories</th>\\n                    <th>Fat</th>\\n                    <th>Sugar</th>\\n                    <th>Carbohydrates</th>\\n                    <th>Protein</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                    <tr v-if=\\\"fruits.length === 0\\\" class=\\\"gradeX\\\">\\n                      <td>No Record Found</td>\\n                    </tr>\\n                    <tr v-else class=\\\"gradeX\\\">\\n                      <div v-for=\\\"fruit in fruits\\\" :key=\\\"fruit.id\\\">\\n                        <td>{{ fruit.id }}</td>\\n                        <td>{{ fruit.name }}</td>\\n                        <td>{{ fruit.family }}</td>\\n                        <td>{{ fruit.order }}</td>\\n                        <td>{{ fruit.calories }}</td>\\n                        <td>{{ fruit.fat }}</td>\\n                        <td>{{ fruit.sugar }}</td>\\n                        <td>{{ fruit.carbohydrates }}</td>\\n                        <td>{{ fruit.protein }}</td>\\n                      </div>\\n                    </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n        </div>\\n      </div> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["/home/code4each/Projects/fruits/fruitsapp/src/components/FruitListing.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    <h1>Fruits</h1>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else>\n      <div>\n        <label for=\"name\">Filter by name:</label>\n        <input type=\"text\" id=\"name\" v-model=\"filters.name\">\n      </div>\n      <div>\n        <label for=\"family\">Filter by family:</label>\n        <input type=\"text\" id=\"family\" v-model=\"filters.family\">\n      </div>\n      <div v-if=\"fruits.length === 0\">\n        No fruits found\n      </div>\n      <div v-else>\n        <div v-for=\"fruit in fruits\" :key=\"fruit.id\">\n          <h3>{{ fruit.name }}</h3>\n          <div>Family: {{ fruit.family }}</div>\n          <div>Order: {{ fruit.order }}</div>\n          <div>Genus: {{ fruit.genus }}</div>\n          <div>\n            Nutritions:\n            <ul>\n              <li>Calories: {{ fruit.calories }}</li>\n              <li>Fat: {{ fruit.fat }}</li>\n              <li>Sugar: {{ fruit.sugar }}</li>\n              <li>Carbohydrates: {{ fruit.carbohydrates }}</li>\n              <li>Protein: {{ fruit.protein }}</li>\n            </ul>\n          </div>\n          <button @click=\"toggleFavorite(fruit.fruit_id)\">\n            {{ isFavorite(fruit.id) ? 'Remove from favorites' : 'Add to favorites' }}\n          </button>\n        </div>\n        <div>\n          <button v-if=\"page > 1\" @click=\"loadPage(page - 1)\">Previous page</button>\n          <button v-if=\"page < totalPages\" @click=\"loadPage(page + 1)\">Next page</button>\n        </div>\n      </div>\n    </div>\n  </div> -->\n\n\n    <!-- <div id=\"wrap\">\n      <div class=\"container\">\n          <h3 class=\"mb-4\">A demo of Listing all the Fruits</h3>\n          <div v-if=\"loading\">Loading...</div>\n          <div v-else>\n            <form method=\"post\" action=\"\" name=\"search_filter\">\n                <div class=\"form-group\">\n                    <select name=\"by_name_filter\" class=\"form-control select_filter\" id=\"by_name\">\n                        <option value=\"all\" selected=\"selected\">By Name</option>\n                        {% for fruit in fruits %}\n                            <option value=\"{{ fruit.name }}\">{{ fruit.name }}</option>\n                        {% endfor %}\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <select name=\"by_family_filter\" class=\"form-control select_filter\" id=\"by_family\">\n                        <option value=\"all\">By Family</option>\n                        {% for fruit in fruits %}\n                            <option value=\"{{ fruit.family }}\">{{ fruit.family }}</option>\n                        {% endfor %}\n                    </select>\n                </div>\n            </form>\n              <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"fruits_list_table table table-striped table-bordered\" id=\"fruits_list_table\">\n                <thead>\n                  <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Family</th>\n                    <th>Order</th>\n                    <th>Calories</th>\n                    <th>Fat</th>\n                    <th>Sugar</th>\n                    <th>Carbohydrates</th>\n                    <th>Protein</th>\n                  </tr>\n                </thead>\n                <tbody>\n                    <tr v-if=\"fruits.length === 0\" class=\"gradeX\">\n                      <td>No Record Found</td>\n                    </tr>\n                    <tr v-else class=\"gradeX\">\n                      <div v-for=\"fruit in fruits\" :key=\"fruit.id\">\n                        <td>{{ fruit.id }}</td>\n                        <td>{{ fruit.name }}</td>\n                        <td>{{ fruit.family }}</td>\n                        <td>{{ fruit.order }}</td>\n                        <td>{{ fruit.calories }}</td>\n                        <td>{{ fruit.fat }}</td>\n                        <td>{{ fruit.sugar }}</td>\n                        <td>{{ fruit.carbohydrates }}</td>\n                        <td>{{ fruit.protein }}</td>\n                      </div>\n                    </tr>\n                </tbody>\n              </table>\n            </div>\n        </div>\n      </div> -->\n    \n</template>\n\n<script>\nimport axios from 'axios'\nimport { API_URL } from '@/config.js';\n\nexport default {\n  name: 'FruitList',\n  data() {\n    return {\n      loading: true,\n      fruits: [],\n      filters: {\n        name: '',\n        family: '',\n      },\n      page: 1,\n      totalPages: 1,\n      favorites: [],\n      url: API_URL, // Define URL globally\n    }\n  },\n  methods: {\n    loadPage(page) {\n      this.loading = true\n      axios.get(`${this.url}/fruits`, {\n        params: {\n          page,\n          name: this.filters.name,\n          family: this.filters.family,\n        },\n      }).then(response => {\n        this.fruits = response.data.fruits\n        this.totalPages = response.data.totalPages\n        this.loading = false\n      }).catch(error => {\n        console.log(error)\n        this.loading = false\n      })\n    },\n    toggleFavorite(id) {\n      if (this.isFavorite(id)) {\n        this.favorites = this.favorites.filter(favoriteId => favoriteId !== id)\n      } else {\n        this.favorites.push(id)\n      }\n    },\n    isFavorite(id) {\n      return this.favorites.includes(id)\n    },\n  },\n  mounted() {\n    this.loadPage(this.page)\n  },\n}\n</script>"],"mappings":";;6DACEA,mBAAA,ogDAyCU,EAGRA,mBAAA,krFA0DY,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}